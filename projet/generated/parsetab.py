
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOPleftIDleftVAUTleftSIADDITIONNE AFFICHER ALORS DE DIVISE EGAL GRAND ID MOINS MULTIPLIE NUMBER OU PAR PETIT PLUS PUIS QUE RIEN SI SINON SOUSTRAIT TANT VAUTprogram : sentenceprogram : sentence programsentence : subordinate "."sentence : subordinate PUIS sentence\n        | subordinate "," sentenceprint : AFFICHER expressionsubordinate : assign\n        | printassign : ID VAUT expressionexpression : NUMBERexpression : IDsentence : TANT QUE expression ALORS sentencesentence : SI expression ALORS sentence SINON sentenceoperator : ADDITIONNE DE %prec OP\n        | SOUSTRAIT DE %prec OP\n        | MULTIPLIE PAR %prec OP\n        | DIVISE PAR %prec OPoperator : PLUS GRAND QUE\n    | PLUS PETIT QUEoperator : PLUS GRAND QUE OU EGAL\n    | PLUS PETIT QUE OU EGAL\n    | MOINS GRAND QUE OU EGAL\n    | MOINS PETIT QUE OU EGALsentence : RIEN "." expression : expression operator expression %prec OP'
    
_lr_action_items = {'TANT':([0,2,12,13,14,19,22,23,25,34,45,46,51,],[4,4,-3,4,4,-24,-4,-5,4,4,-12,4,-13,]),'SI':([0,2,12,13,14,19,22,23,25,34,45,46,51,],[5,5,-3,5,5,-24,-4,-5,5,5,-12,5,-13,]),'RIEN':([0,2,12,13,14,19,22,23,25,34,45,46,51,],[6,6,-3,6,6,-24,-4,-5,6,6,-12,6,-13,]),'ID':([0,2,5,10,12,13,14,15,19,20,22,23,25,26,34,37,38,39,40,45,46,47,48,51,56,57,58,59,],[9,9,18,18,-3,9,9,18,-24,18,-4,-5,9,18,9,-14,-15,-16,-17,-12,9,-18,-19,-13,-20,-21,-22,-23,]),'AFFICHER':([0,2,12,13,14,19,22,23,25,34,45,46,51,],[10,10,-3,10,10,-24,-4,-5,10,10,-12,10,-13,]),'$end':([1,2,11,12,19,22,23,45,51,],[0,-1,-2,-3,-24,-4,-5,-12,-13,]),'.':([3,6,7,8,17,18,21,33,36,],[12,19,-7,-8,-10,-11,-6,-9,-25,]),'PUIS':([3,7,8,17,18,21,33,36,],[13,-7,-8,-10,-11,-6,-9,-25,]),',':([3,7,8,17,18,21,33,36,],[14,-7,-8,-10,-11,-6,-9,-25,]),'QUE':([4,41,42,43,44,],[15,47,48,49,50,]),'NUMBER':([5,10,15,20,26,37,38,39,40,47,48,56,57,58,59,],[17,17,17,17,17,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,]),'VAUT':([9,],[20,]),'SINON':([12,19,22,23,35,45,51,],[-3,-24,-4,-5,46,-12,-13,]),'ALORS':([16,17,18,24,36,],[25,-10,-11,34,-25,]),'ADDITIONNE':([16,17,18,21,24,33,36,],[27,-10,-11,27,27,27,-25,]),'SOUSTRAIT':([16,17,18,21,24,33,36,],[28,-10,-11,28,28,28,-25,]),'MULTIPLIE':([16,17,18,21,24,33,36,],[29,-10,-11,29,29,29,-25,]),'DIVISE':([16,17,18,21,24,33,36,],[30,-10,-11,30,30,30,-25,]),'PLUS':([16,17,18,21,24,33,36,],[31,-10,-11,31,31,31,-25,]),'MOINS':([16,17,18,21,24,33,36,],[32,-10,-11,32,32,32,-25,]),'DE':([27,28,],[37,38,]),'PAR':([29,30,],[39,40,]),'GRAND':([31,32,],[41,43,]),'PETIT':([31,32,],[42,44,]),'OU':([47,48,49,50,],[52,53,54,55,]),'EGAL':([52,53,54,55,],[56,57,58,59,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,11,]),'sentence':([0,2,13,14,25,34,46,],[2,2,22,23,35,45,51,]),'subordinate':([0,2,13,14,25,34,46,],[3,3,3,3,3,3,3,]),'assign':([0,2,13,14,25,34,46,],[7,7,7,7,7,7,7,]),'print':([0,2,13,14,25,34,46,],[8,8,8,8,8,8,8,]),'expression':([5,10,15,20,26,],[16,21,24,33,36,]),'operator':([16,21,24,33,36,],[26,26,26,26,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence','program',1,'p_program_sentence','parser5.py',30),
  ('program -> sentence program','program',2,'p_program_recursive','parser5.py',35),
  ('sentence -> subordinate .','sentence',2,'p_sentence_subordinate','parser5.py',40),
  ('sentence -> subordinate PUIS sentence','sentence',3,'p_sentence_recursive','parser5.py',45),
  ('sentence -> subordinate , sentence','sentence',3,'p_sentence_recursive','parser5.py',46),
  ('print -> AFFICHER expression','print',2,'p_print','parser5.py',51),
  ('subordinate -> assign','subordinate',1,'p_subordinate_assign','parser5.py',56),
  ('subordinate -> print','subordinate',1,'p_subordinate_assign','parser5.py',57),
  ('assign -> ID VAUT expression','assign',3,'p_assign','parser5.py',62),
  ('expression -> NUMBER','expression',1,'p_expression_num','parser5.py',67),
  ('expression -> ID','expression',1,'p_expression_id','parser5.py',72),
  ('sentence -> TANT QUE expression ALORS sentence','sentence',5,'p_sentence_while','parser5.py',77),
  ('sentence -> SI expression ALORS sentence SINON sentence','sentence',6,'p_sentence_compare','parser5.py',82),
  ('operator -> ADDITIONNE DE','operator',2,'p_operator','parser5.py',87),
  ('operator -> SOUSTRAIT DE','operator',2,'p_operator','parser5.py',88),
  ('operator -> MULTIPLIE PAR','operator',2,'p_operator','parser5.py',89),
  ('operator -> DIVISE PAR','operator',2,'p_operator','parser5.py',90),
  ('operator -> PLUS GRAND QUE','operator',3,'p_operator_comparator','parser5.py',95),
  ('operator -> PLUS PETIT QUE','operator',3,'p_operator_comparator','parser5.py',96),
  ('operator -> PLUS GRAND QUE OU EGAL','operator',5,'p_operator_comparator_equal','parser5.py',101),
  ('operator -> PLUS PETIT QUE OU EGAL','operator',5,'p_operator_comparator_equal','parser5.py',102),
  ('operator -> MOINS GRAND QUE OU EGAL','operator',5,'p_operator_comparator_equal','parser5.py',103),
  ('operator -> MOINS PETIT QUE OU EGAL','operator',5,'p_operator_comparator_equal','parser5.py',104),
  ('sentence -> RIEN .','sentence',2,'p_sentence_nothing','parser5.py',109),
  ('expression -> expression operator expression','expression',3,'p_expression_op','parser5.py',114),
]
